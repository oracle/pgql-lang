module normalized-signatures

signature constructors // for type checking (see trans/types.ts)

  VertexTy    : VertexTy
  EdgeTy      : EdgeTy
  PathTy      : PathTy
  BooleanTy   : BooleanTy
  NumericTy   : NumericTy
  StringTy    : StringTy
  StringSetTy : StringSetTy
  DateTy      : DateTy
  TimeTy      : TimeTy
  TimestampTy : TimestampTy
  ArrayTy     : ArrayTy
  UnknownTy   : UnknownTy

signature constructors // for the normalized AST (see trans/normalize.str)

  AstPlusMetadata       : Ast * Metadata -> AstPlusMetadata
  NormalizedQuery       : CommonPathExpressions * Vars * FromClause * TableExpressions * WhereClause * GroupByClause * HavingClause * List(OrderByElem) * LimitOffsetClauses * QueryAnnotations -> NormalizedQuery
  QueryAnnotations      : List(ErrorMessage) * PgqlVersion * BindVariableCount * SelectingAllProperties * Option(GraphTable) -> QueryAnnotations
  PgqlVersion           : STRING
  GraphName             : LocalOrSchemaQualifiedName -> GraphName
  CommonPathExpressions : List(CommonPathExpression) -> CommonPathExpressions
  GraphPattern          : Vertices * Connections * Constraints * OptionalMatchKeyWord -> GraphPattern
  Vertices              : List(Vertex) -> Vertices
  Vertex                : Var -> Vertex
  Edges                 : List(Edge) -> Edges
  NormalizedEdge        : Var * Var * Var * Direction * Quantifier * Constraints -> Edge
  Paths                 : List(Path) -> Paths
  Path                  : Var * Var * PathPatternRef * Option(KleeneStar) * Var * Direction * PathFindingSemantic * TopKAnyAll * PathMode * RowsPerMatch -> Path
  Constraints           : List(Exp) -> Constraints
  Incoming              : Direction
  Outgoing              : Direction
  Undirected            : Direction

  ExpAsVars             : List(ExpAsVar) -> ExpAsVars
  ExpAsVar              : Exp * Var * Anonymous -> ExpAsVar
  Anonymous             : Anonymous
  NonAnonymous          : Anonymous

  OrderByElem           : Exp * Ordering * Version -> OrderbyElem
  Asc                   : Ordering
  Desc                  : Ordering
  LimitOffsetClauses    : Option(LimitClause) * Option(OffsetClause) -> LimitOffsetClauses

  Neq                   : Exp * Exp -> Exp

  Identifier            : IDENTIFIER * OriginText -> Identifier
  BindVariable          : INTEGER -> BindVariable
  Version               : STRING
  InPredicate           : Exp * Exp -> InPredicate
  IfElse                : Exp * Exp * Exp -> IfElse
  Null                  : Null
  SimpleCase            : CaseOperand * WhenClauses * ElseClause * IfElseRepresentation -> SimpleCase

  Reaches               : Reaches
  Shortest              : Shortest
  Cheapest              : Cheapest
  All                   : All
  Any                   : Any
  TopK                  : STRING -> TopK

  VertexInsertion       : Identifier * OriginOffset * LabelsSpecification * PropertiesSpecification -> VertexInsertion
  DirectedEdgeInsertion : Identifier * OriginOffset * Source * Destination * LabelsSpecification * PropertiesSpecification -> DirectedEdgeInsertion

  TableExpressionsAndGraphName : GraphPattern * Name * WhereClause -> TableExpressionsAndGraphName

  PathPatternAndRowsPerMatch   : PathPattern * RowsPerMatch * WhereClause * Optional(OptionalKeyword) -> PathPatternAndRowsPerMatch

  SelectingAllProperties       : Boolean -> SelectingAllProperties

  GraphTable                   : GraphTable

  SourceDestinationPredicate   : VarRef * VarRef * Boolean -> SourceDestinationPredicate

signature constructors // for name binding (see trans/trans-for-nabl.str)

  Vertex                : Var * OriginOffset * Correlation * Boundedness -> Vertex
  Edge                  : Var * Var * Var * Direction * OriginOffset * Correlation * Boundedness -> Edge

  ExpAsVar              : Exp * Var * Anonymous * OriginOffset -> ExpAsVar

  CreateOneGroup        : CreateOneGroup

  VarDef                : Var * OriginOffset * OriginalExp * ReplacedGroupByExpWithSelectExp * TransformedExp * ThisQueryOrOuterOrLateralQuery * Type -> VarDef
  VarRef                : Var * OriginOffset -> VarRef

  ThisQuery             : ThisQueryOrOuterOrLateralQuery
  OuterQuery            : ThisQueryOrOuterOrLateralQuery
  LateralQuery          : ThisQueryOrOuterOrLateralQuery

  Exp                   : OriginalExp
  None                  : OriginalExp
  Exp                   : TransformedExp
  None                  : TransformedExp

  GraphPattern          : Vertices * Connections * Constraints * CrossReferences * OptionalMatchKeyWord -> GraphPattern

  Correlation           : VarRef -> CrossRef

  RowsPerMatchVariable  : Var * OriginOffset * Correlation * Type -> RowsPerMatchVariable

  GroupBySelectStar     : GroupBySelectStar

signature constructors // for error checking (see trans/check.str)

  ReferenceInInlinedConstraint                      : Var -> ReferenceInInlinedConstraint
  CrossReferenceInInlinedConstraint                 : Var -> CrossReferenceInInlinedConstraint
  ErrorMessage                                      : Term * STRING -> ErrorMessage
  ComplexRegularExpressionNotSupported              : Term * Term -> ComplexRegularExpressionNotSupported
  ComplexParenthesizedRegularExpressionNotSupported : Term * Term -> ComplexParenthesizedRegularExpressionNotSupported

signature constructors // for type anslysis (see trans/type-analysis.str)

  VariablePlusType        : OriginOffset * DereferencedOriginOffset * Type -> VariablePlusType

  LabelOr                 : STRING * STRING -> LabelOr

  LabelAnd                : STRING * STRING -> LabelAnd

  ExpressionPlusType      : Exp * Type -> ExpressionPlusType

  Type                    : STRING * List(TypeAnnotation) -> Type

  Undefined               : Type // when the operation is undefined for the input types or the property does not exist

  UnknownType             : Type

  AmbiguousType           : Type

  Boundedness             : TypeAnnotation

  AlwaysBound             : Boundedness

  OptionallyBound         : Boundedness

  VertexLabels            : List(Label) -> VertexLabels

  EdgeLabels              : List(Label) -> EdgeLabels

  Label                   : STRING * List(Property) -> Label

  Property                : STRING * Type -> Property

  DefaultStringType       : STRING -> DefaultStringType

  DefaultShortIntegerType : STRING -> DefaultShortIntegerType

  DefaultLongIntegerType  : STRING -> DefaultLongIntegerType

  DefaultDecimalType      : STRING -> DefaultDecimalType

  UnionTypes              : List(UnionType) -> UnionTypes

  UnionType               : STRING * STRING * STRING -> UnionType

  BinaryOperations        : List(BinaryOperation) -> BinaryOperations

  BinaryOperation         : STRING * STRING * STRING * STRING -> BinaryOperation

  UnaryOperations         : List(UnaryOperation) -> UnaryOperations

  UnaryOperation          : STRING * STRING * STRING -> UnaryOperation

  DataTypeSynonyms        : List(DataTypeSynonym) -> DataTypeSynonyms

  DataTypeSynonym         : STRING * STRING -> DataTypeSynonym

  FunctionSignatures      : List(FunctionSignature) -> FunctionSignatures

  FunctionSignature       : Optional(STRING) * Optional(STRING) * STRING * List(STRING) * STRING -> FunctionSignature

  AllowReferencingAnyProperty : AllowReferencingAnyProperty
