module pgql-lang

imports

  Layout
  Names
  Literals
  GraphPattern
  SolutionModifiers
  Legacy
  Expressions
  Modify
  DDL

context-free start-symbols

  Start

template options

  keyword -/- [a-zA-Z0-9]

context-free syntax

  Start = Statement

  Statement = Query

  Query = Legacy11Query

  Query = Legacy10Query

  Query.Query =
    <
      <{CommonPathExpression "\n"}*>
      <SelectOrModify>
      <FromWhereClauses?>
      <GroupByClause?>
      <HavingClause?>
      <OrderByClause?>
      <LimitOffsetClauses?>
    >

  FromWhereClauses.FromWhereClauses = <FROM <{TableExpression ","}+> <WhereClause?>> {case-insensitive}

  TableExpression = GraphMatch

  TableExpression = DerivedTable

  TableExpression = GraphTableDerivedTable

  GraphMatch.GraphMatch = OptionalMatchKeyword? MatchKeyword? PathPattern OptionalGraphMatchParts?

  GraphMatch.ParenthesizedGraphMatch = <<OptionalMatchKeyword?> MATCH ( <PathPattern>, <{PathPattern ","}+> <WhereClause?> ) <OptionalGraphMatchParts?>> {case-insensitive}

  OptionalMatchKeyword.OptionalMatchKeyword = <OPTIONAL> {case-insensitive}
  MatchKeyword.MatchKeyword = <MATCH> {case-insensitive}

  OptionalGraphMatchParts.OptionalGraphMatchParts1 = GraphTableRowsClause OnClause? // deprecated
  OptionalGraphMatchParts.OptionalGraphMatchParts2 = OnClause GraphTableRowsClause?

  OnClause.OnClause = <ON <GraphName>> {case-insensitive}

  SelectOrModify = SelectClause
  SelectOrModify = ModifyClause

  CommonPathExpression.CommonPathExpression = <PATH <Identifier> <AsignSymbol> <PathPattern> <WhereClause?> <CostClause?>> {case-insensitive}
  AsignSymbol.Pgql11AsignSymbol = <AS> {case-insensitive}

  SelectClause.SelectClause = <SELECT <Distinct?> <Projection>> {case-insensitive}

  Projection.SelectList = <<{SelectElem ", "}+>>
  SelectElem = ExpAsVar
  SelectElem = AllPropertiesReference
  AllPropertiesReference.AllProperties = <<VarRef>.* <ColumnNamePrefix?>>
  ColumnNamePrefix.ColumnNamePrefix = <PREFIX <String>> {case-insensitive}

  Projection.Star = <*>

  GraphTableRowsClause.OneRowPerMatch = <ONE ROW PER MATCH> {case-insensitive}
  GraphTableRowsClause.OneRowPerVertex = <ONE ROW PER VERTEX (<Identifier>)> {case-insensitive}
  GraphTableRowsClause.OneRowPerEdge = <ONE ROW PER EDGE (<Identifier>)> {case-insensitive}
  GraphTableRowsClause.OneRowPerStep = <ONE ROW PER STEP (<Identifier>, <Identifier>, <Identifier>)> {case-insensitive}

  DerivedTable.DerivedTable = LateralKeyword? TableSubquery Correlation?
  LateralKeyword.Lateral = <LATERAL> {case-insensitive}
  TableSubquery = Subquery
  Correlation.Correlation = AsignSymbol? Identifier

  GraphTableDerivedTable.GraphTableDerivedTable = GraphTable Correlation?
  GraphTable.GraphTable = <GRAPH_TABLE ( <GraphName?> MATCH <GraphPattern> <GraphTableShape> )> {case-insensitive}
  GraphTableShape.GraphTableShape = GraphTableRowsClause? GraphTableColumnsClause?
  GraphTableColumnsClause.GraphTableColumnsClause = <COLUMNS ( <{GraphTableColumnDefinition ","}+> )> {case-insensitive}
  GraphTableColumnDefinition = ExpAsVar
  GraphTableColumnDefinition = AllPropertiesReference
