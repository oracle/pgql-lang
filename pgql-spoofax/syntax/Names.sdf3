module Names

imports

  Literals

template options

  keyword -/- [a-zA-Z0-9]

context-free syntax

  VarRef.VarRef = Identifier

  PropRef.PropRef = <<VarRef>.<Property>>
  Property = Identifier

  VarAssign.VarAssign = < AS <Identifier>> {case-insensitive}

  Identifier.RegularIdentifier = REGULAR-IDENTIFIER
  Identifier.DelimitedIdentifier = DELIMITED-IDENTIFIER

  TableName = LocalOrSchemaQualifiedName
  GraphName = LocalOrSchemaQualifiedName

  LocalOrSchemaQualifiedName.Name = <<SchemaNameDot?><Identifier>>
  SchemaNameDot.SchemaName = <<Identifier>.>
  SchemaName.SchemaName = Identifier

lexical syntax

  REGULAR-IDENTIFIER = [a-zA-Z][a-zA-Z0-9\_]*

  DELIMITED-IDENTIFIER             = '"' (~[\"] | DELIMITED-IDENTIFIER-ESCAPE-CHAR)* '"'
  DELIMITED-IDENTIFIER-ESCAPE-CHAR = '\\"' | '""'

  DATA-TYPE            = [a-zA-Z][a-zA-Z0-9\_\(\)\,]* (' ' [a-zA-Z][a-zA-Z0-9\_]*)*
  OPTION               = [a-zA-Z][a-zA-Z0-9\_]* (' ' [a-zA-Z][a-zA-Z0-9\_]*)*

  FUNCTION-NAME = REGULAR-IDENTIFIER

lexical restrictions // greedy matching

  REGULAR-IDENTIFIER -/- [a-zA-Z0-9\_]

lexical syntax // reserved keywords

  // make sure to keep in sync with oracle.pgql.lang.ir.PgqlUtils.RESERVED_WORDS
  REGULAR-IDENTIFIER = 'true' {reject}
  REGULAR-IDENTIFIER = 'false' {reject}
  REGULAR-IDENTIFIER = 'null' {reject}
  REGULAR-IDENTIFIER = 'not' {reject}
  REGULAR-IDENTIFIER = 'distinct' {reject}

  FUNCTION-NAME = 'count' {reject}
  FUNCTION-NAME = 'min' {reject}
  FUNCTION-NAME = 'max' {reject}
  FUNCTION-NAME = 'sum' {reject}
  FUNCTION-NAME = 'avg' {reject}
  FUNCTION-NAME = 'array_agg' {reject}
  FUNCTION-NAME = 'json_arrayagg' {reject}
  FUNCTION-NAME = 'listagg' {reject}
  FUNCTION-NAME = 'exists' {reject}
  FUNCTION-NAME = 'asc' {reject}
  FUNCTION-NAME = 'desc' {reject}
  FUNCTION-NAME = 'not' {reject}
  FUNCTION-NAME = 'distinct' {reject}
  FUNCTION-NAME = 'path' {reject}
  FUNCTION-NAME = 'as' {reject}
  FUNCTION-NAME = 'select' {reject}
  FUNCTION-NAME = 'from' {reject}
  FUNCTION-NAME = 'match' {reject}
  FUNCTION-NAME = 'where' {reject}
  FUNCTION-NAME = 'group' {reject}
  FUNCTION-NAME = 'order' {reject}
  FUNCTION-NAME = 'by' {reject}
  FUNCTION-NAME = 'having' {reject}
  FUNCTION-NAME = 'limit' {reject}
  FUNCTION-NAME = 'offset' {reject}
