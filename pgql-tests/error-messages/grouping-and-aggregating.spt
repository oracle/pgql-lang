module variables

language pgql-lang

test Select non-group key 1 [[

    SELECT [[n.name]] AS nName
      FROM g MATCH (n)
  GROUP BY n.age AS nAge

]] error like "Unresolved variable (did you mean to use a group key?)" at #1

test Select non-group key 2 [[

    SELECT [[n]] AS c1
      FROM g MATCH (n)
  GROUP BY n.age AS nAge

]] error like "Unresolved variable (did you mean to use a group key?)" at #1

test Order by non-group key 1 [[

    SELECT nAge AS c1
      FROM g MATCH (n)
  GROUP BY n.age AS nAge
  ORDER BY [[n.name]]

]] error like "Unresolved variable (did you mean to use a group key?)" at #1

test Order by non-group key 2 [[

    SELECT nAge AS c1
      FROM g MATCH (n)
  GROUP BY n.age AS nAge
  ORDER BY [[n.name]]

]] error like "Unresolved variable (did you mean to use a group key?)" at #1

test Aggregation expected in SELECT 1 [[

  SELECT AVG(n.age) AS avgAge, [[n]] AS c2
    FROM g MATCH (n)

]] error like "Unresolved variable (did you mean to use an aggregation?)" at #1

test Aggregation expected in SELECT 2 [[

  SELECT [[labels(n)]] AS lbls, COUNT(*) AS cnt
    FROM g MATCH (n)

]] error like "Unresolved variable (did you mean to use an aggregation?)" at #1

test Aggregation expected in ORDER BY [[

    SELECT AVG(n.age) AS avgAge
      FROM g MATCH (n)
  ORDER BY [[n.age]]

]] error like "Unresolved variable (did you mean to use an aggregation?)" at #1

test Aggregation in ORDER BY not expected [[

    SELECT n AS c1
      FROM g MATCH (n)
  ORDER BY [[AVG(n.age)]]

]] error like "Aggregation in ORDER BY only allowed if SELECT has aggregations" at #1

test Aggregation in ORDER BY not expected [[

    SELECT [[*]]
      FROM g MATCH (n) -[e]-> (m)
  GROUP BY e.weight AS weight

]] error like "SELECT * not allowed in combination with GROUP BY" at #1

test COUNT(DISTINCT *) [[

  SELECT COUNT(DISTINCT [[*]]) AS cnt
    FROM g MATCH (n)

]] error like "* not allowed in combination with DISTINCT" at #1

test Subquery with non-group key variable in SELECT (1) [[

  SELECT EXISTS (   SELECT m.prop AS mProp, [[n]].prop AS nProp
                      FROM g MATCH (m)
                  GROUP BY m.prop AS key
                ) AS v1
    FROM g MATCH (n)

]] error like "Unresolved variable (did you mean to use a group key?)" at #1

test Subquery with non-group key variable in SELECT (2) [[

  SELECT n AS c1
    FROM g MATCH (n)
   WHERE EXISTS (   SELECT m.prop AS nProp, [[n]].prop AS mProp
                      FROM g MATCH (m)
                  GROUP BY m.prop AS key
                )

]] error like "Unresolved variable (did you mean to use a group key?)" at #1

test Subquery with non-group key variable in SELECT (3) [[

  SELECT MIN(EXISTS (   SELECT key AS c1, [[n]].prop AS nProp
                          FROM g MATCH (m)
                      GROUP BY m.prop AS key
                    )) AS min
    FROM g MATCH (n)

]] error like "Unresolved variable (did you mean to use a group key?)" at #1

test Aggregate group variable and non-group variable simultaneously [[

  SELECT [[AVG(n.age)]] AS avg1, AVG(e.age) AS avg2
    FROM g MATCH TOP 10 SHORTEST ( (n) -[e]->* (m) )

]] error like "Aggregation with group variables expected since SELECT clause has another aggregation with group variable" at #1

test Duplicate variable in GROUP BY 1 [[

    SELECT nName AS c1
      FROM g MATCH (n)
  GROUP BY n.name AS [[nName]], n.name AS [[nName]]

]] error like "Duplicate column name in GROUP BY" at #1, #2

test Duplicate variable in GROUP BY 2 [[

    SELECT n AS c1
      FROM g MATCH (n)
  GROUP BY n AS [[n]], [[n]]

]] error like "Duplicate column name in GROUP BY" at #1, #2

test Duplicate variable in GROUP BY 3 [[

    SELECT n AS c1
      FROM g MATCH (n)
  GROUP BY [[n]], [[n]]

]] error like "Duplicate column name in GROUP BY" at #1, #2

test Redefine variable from WHERE in GROUP BY [[

    SELECT n.age AS nAge
      FROM g MATCH (n)
  GROUP BY n AS [[n]]

]] error like "Duplicate variable: variable already defined in the FROM clause" at #1

test Nested aggregation (1) [[

  SELECT AVG([[MIN(n.age)]]) AS nestedAggr
    FROM g MATCH (n)

]] error like "Nested aggregation not allowed here" at #1

test Nested aggregation (2) [[

    SELECT MIN(n.age) AS min
      FROM g MATCH (n)
  ORDER BY AVG([[MIN(n.age)]])

]] error like "Nested aggregation not allowed here" at #1

test Nested aggregation (3) [[

    SELECT MIN(n.age) AS min
      FROM g MATCH (n)
  ORDER BY AVG( [[min]] )

]] error like "Unresolved variable" at #1

test Aggregation in WHERE (1) [[

  SELECT COUNT(n) AS cnt
    FROM g MATCH (n)
   WHERE [[COUNT(1)]]

]] error like "Aggregation without group variables not allowed in WHERE" at #1

test Aggregation in WHERE (2) [[

  SELECT 3 AS three
    FROM g MATCH (n)
   WHERE [[COUNT(1)]]

]] error like "Aggregation without group variables not allowed in WHERE" at #1

test Aggregation in WHERE (3) [[

    PATH any AS () -> () WHERE [[COUNT(*)]]
  SELECT 3 AS three
    FROM g MATCH (n)

]] error like "Aggregation without group variables not allowed in WHERE" at #1

test Aggregation in GROUP BY (1) [[

    SELECT avgAge AS c1
      FROM g MATCH (n)
  GROUP BY [[AVG(1)]] AS avgAge

]] error like "Aggregation without group variables not allowed in GROUP BY" at #1

test Aggregation in GROUP BY (2) [[

    SELECT avgAge AS c1
      FROM g MATCH (n)
  GROUP BY [[AVG(MIN(n.age))]] AS avgAge

]] error like "Nested aggregation not allowed here" at #1

test Aggregation in GROUP BY (3) [[

    SELECT avgAge AS c1
      FROM g MATCH (n)
  GROUP BY [[AVG(MIN(n.age))]] AS avgAge

]] error like "Nested aggregation not allowed here" at #1

test Illegal nested aggregation 1 [[

    SELECT COUNT( [[COUNT(*)]] ) AS c1, MIN( [[MAX(123)]] ) AS c2
     MATCH (n)
     WHERE [[MIN(COUNT(*))]] > 3
  ORDER BY [[MAX(COUNT(3))]]

]] error like "Nested aggregation not allowed here" at #1, #2, #3, #4

test Illegal nested aggregation 2 [[

    SELECT COUNT( [[COUNT(*)]] ) AS c1, MIN( [[MAX(123)]] ) AS c2
     MATCH (n)
     WHERE [[MIN(COUNT(*))]] > 3
  GROUP BY n.prop AS x
    HAVING [[MIN(COUNT(3))]] = 4
  ORDER BY [[MAX(COUNT(3))]]

]] error like "Nested aggregation not allowed here" at #1, #2, #3, #4, #5

test Reference alias from SELECT in GROUP BY, not allowed when aggregation [[

    SELECT [[COUNT(1)]] AS v
      FROM MATCH (n)
  GROUP BY v

]] error like "Aggregation without group variables not allowed in GROUP BY" at #1

test Unexpected aggregation without group variables (1) [[

  SELECT COUNT(e), [[COUNT(*)]], [[COUNT(a)]], [[COUNT(1+1)]]
    FROM MATCH ANY (a:account) -[e]->* (b:account)

]] error like "Aggregation with group variables expected since SELECT clause has another aggregation with group variables" at #1, #2, #3

test Unexpected aggregation without group variables (2) [[

SELECT 1
FROM MATCH (n)
WHERE EXISTS ( SELECT COUNT(e), [[COUNT(*)]], [[COUNT(a)]], [[COUNT(1+1)]]
                 FROM MATCH ANY (n) -[e]->* (b:account) )

]] error like "Aggregation with group variables expected since SELECT clause has another aggregation with group variables" at #1, #2, #3

test Unexpected aggregation without group variables (3) [[

SELECT 1
FROM MATCH (n)
   , LATERAL ( SELECT COUNT(e), [[COUNT(*)]], [[COUNT(a)]], [[COUNT(1+1)]]
                 FROM MATCH ANY (n) -[e]->* (b:account) )

]] error like "Aggregation with group variables expected since SELECT clause has another aggregation with group variables" at #1, #2, #3
