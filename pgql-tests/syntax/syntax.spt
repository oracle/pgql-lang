module syntax

language pgql-lang

test Case insensitivity [[
sElEcT mAx(n.age), MiN(n.age), sUm(n.age)
WhErE
  (n), TrUe Or FaLsE And n.married
gRoUp By n.name
OrDeR bY AvG(n.age)
lImIt 1
]]

test Edges [[
SELECT *
FROM MATCH (n) -> () -[e1]-> () -[e2 IS knows]-> (),
     MATCH (n) <- () <-[e3]- () <-[e4:knows]- ()
]]

test Built-in function calls [[
SELECT n.inDegree()
WHERE
  (n WITH inDegree() > 3),
  (n WITH .inDegree() > 3),
  n.inDegree() > 3
]]

test Strings [[
SELECT *
WHERE
  (n1 WITH name = 'Single quotes \'\' and double quotes "" or \"\"') ->
  (n2 WITH name = "Single quotes '' or \'\' and double quotes \"\"")
]]

test Numeric [[
SELECT *
WHERE
  (n1 WITH age = 25 AND age > -25 AND age = 25.0 AND age > -25.0)
]]


tests Label expression with IS [[

  SELECT *
  FROM MATCH (n IS Person) -[IS knows]-> (IS Person) -[e IS knows]-> (m)

]]

tests Label expression with mixed IS and : [[

  SELECT *
  FROM MATCH (n IS Person) -[:knows]-> (:Person) -[e IS knows]-> (m)

]]
