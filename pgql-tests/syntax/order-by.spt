module order-by

language pgql-lang

test Order by node [[
SELECT n.id()
WHERE
  (n)
ORDER BY n
]]

test Order by two vertices [[

  SELECT n.id(), m.id()
  FROM MATCH (n) -[:likes]-> (m)
  ORDER BY n, m

]]

test Order by node ID [[
SELECT n.id()
WHERE
  (n)
ORDER BY n.id()
]]

test Order by property [[
SELECT n.age
WHERE
  (n)
ORDER BY n.name
]]

test Order by select key 1 [[
SELECT n.name AS nName
WHERE
  (n)
ORDER BY nName
]]

test Order by select key 2 [[
SELECT n.name AS nName
WHERE
  (n)
ORDER BY n.name
]]

test Order by group key 1 [[
SELECT n.age, COUNT(*)
WHERE
  (n)
GROUP BY n.age AS nAge
ORDER BY nAge
]]

test Order by group key 2 [[
SELECT n.age, COUNT(*)
WHERE
  (n)
GROUP BY n.age
ORDER BY n.age
]]

test Order by aggregation from SELECT 1 [[
SELECT AVG(n.age) AS avgAge
WHERE
  (n)
ORDER BY avgAge
]]

test Order by aggregation from SELECT 2 [[
SELECT n.name, AVG(n.age) AS avgAge
WHERE
  (n)
GROUP BY n.name
ORDER BY n.name, avgAge
]]


test Order by aggregation not from SELECT 1 [[
SELECT COUNT(*)
WHERE
  (n)
ORDER BY AVG(n.age)
]]

test Order by aggregation not from SELECT 2 [[
SELECT COUNT(*)
WHERE
  (n)
GROUP BY n.age
ORDER BY AVG(n.age)
]]

test Duplicate expression in ORDER BY is fine [[
SELECT *
WHERE
  (n)
ORDER BY n.name, n.name
]]
